# 🚂 Railway ChromaDB Dockerfile
# Optimized for Railway deployment with persistent storage

FROM chromadb/chroma:latest

# Set working directory
WORKDIR /app

# Create data directory with proper permissions
RUN mkdir -p /app/chromadb_data && \
    chmod -R 777 /app/chromadb_data && \
    chown -R root:root /app/chromadb_data

# Install curl for health checks
RUN apt-get update && apt-get install -y curl && rm -rf /var/lib/apt/lists/*

# Set environment variables for Railway
ENV CHROMA_DB_IMPL=duckdb+parquet
ENV PERSIST_DIRECTORY=/app/chromadb_data
ENV CHROMA_HOST=0.0.0.0
ENV CHROMA_PORT=8000
ENV ANONYMIZED_TELEMETRY=false
ENV IS_PERSISTENT=1
ENV CHROMA_SERVER_CORS_ALLOW_ORIGINS=["*"]

# Create a startup script for proper initialization
RUN echo '#!/bin/bash\n\
echo "🚂 Starting ChromaDB on Railway..."\n\
echo "📁 Data directory: $PERSIST_DIRECTORY"\n\
echo "🌐 Host: $CHROMA_HOST:$CHROMA_PORT"\n\
echo "💾 Database: $CHROMA_DB_IMPL"\n\
\n\
# Ensure data directory exists\n\
mkdir -p $PERSIST_DIRECTORY\n\
chmod 777 $PERSIST_DIRECTORY\n\
\n\
# Start ChromaDB\n\
chroma run \\\n\
  --host $CHROMA_HOST \\\n\
  --port $CHROMA_PORT \\\n\
  --path $PERSIST_DIRECTORY\n\
' > /app/start.sh && chmod +x /app/start.sh

# Expose port
EXPOSE 8000

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
    CMD curl -f http://localhost:8000/api/v1/heartbeat || exit 1

# Use startup script
CMD ["/app/start.sh"] 