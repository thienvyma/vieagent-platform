const fetch = require('node-fetch');

async function createBlogPosts() {
  try {
    console.log('üîÑ T·∫°o blog posts qua admin API...');

    const blogPosts = [
      {
        title: 'C√°ch AI Agents Thay ƒê·ªïi T∆∞∆°ng Lai Customer Service',
        slug: 'ai-agents-customer-service-future',
        excerpt: 'Kh√°m ph√° c√°ch c√°c doanh nghi·ªáp h√†ng ƒë·∫ßu s·ª≠ d·ª•ng AI Agents ƒë·ªÉ tƒÉng hi·ªáu su·∫•t customer service l√™n 300% v√† gi·∫£m chi ph√≠ v·∫≠n h√†nh.',
        content: `# C√°ch AI Agents Thay ƒê·ªïi T∆∞∆°ng Lai Customer Service

Trong th·ªùi ƒë·∫°i s·ªë h√≥a hi·ªán t·∫°i, **AI Agents** ƒëang c√°ch m·∫°ng h√≥a c√°ch th·ª©c doanh nghi·ªáp t∆∞∆°ng t√°c v·ªõi kh√°ch h√†ng.

## L·ª£i √çch Ch√≠nh c·ªßa AI Agents

### 1. TƒÉng Hi·ªáu Su·∫•t V·∫≠n H√†nh
- **Ph·∫£n h·ªìi 24/7**: Kh√¥ng gi·ªõi h·∫°n th·ªùi gian l√†m vi·ªác
- **X·ª≠ l√Ω ƒë·ªìng th·ªùi**: C√≥ th·ªÉ handle h√†ng trƒÉm cu·ªôc h·ªôi tho·∫°i c√πng l√∫c
- **Th·ªùi gian ph·∫£n h·ªìi**: Gi·∫£m t·ª´ ph√∫t xu·ªëng gi√¢y

### 2. Gi·∫£m Chi Ph√≠ V·∫≠n H√†nh
- Ti·∫øt ki·ªám ƒë·∫øn **70% chi ph√≠ nh√¢n s·ª±**
- Gi·∫£m th·ªùi gian training cho nh√¢n vi√™n m·ªõi
- T·ªëi ∆∞u h√≥a quy tr√¨nh l√†m vi·ªác

## K·∫øt Lu·∫≠n
AI Agents kh√¥ng ch·ªâ l√† xu h∆∞·ªõng m√† ƒë√£ tr·ªü th√†nh **necessity** cho c√°c doanh nghi·ªáp mu·ªën c·∫°nh tranh trong th·ªùi ƒë·∫°i s·ªë.`,
        status: 'PUBLISHED',
        publishedAt: new Date('2024-01-15').toISOString()
      },
      {
        title: 'Top 5 Use Cases AI Automation Trong E-commerce',
        slug: 'ai-automation-ecommerce-use-cases',
        excerpt: 'T·ª´ chatbot support ƒë·∫øn inventory management, t√¨m hi·ªÉu nh·ªØng ·ª©ng d·ª•ng AI automation mang l·∫°i ROI cao nh·∫•t cho ng√†nh e-commerce.',
        content: `# Top 5 Use Cases AI Automation Trong E-commerce

E-commerce l√† m·ªôt trong nh·ªØng ng√†nh ƒë∆∞·ª£c h∆∞·ªüng l·ª£i nhi·ªÅu nh·∫•t t·ª´ **AI Automation**.

## 1. Customer Support Automation
### Chatbot Support 24/7
- Tr·∫£ l·ªùi c√¢u h·ªèi th∆∞·ªùng g·∫∑p
- H·ªó tr·ª£ ƒë·∫∑t h√†ng v√† theo d√µi ƒë∆°n h√†ng
- Escalation t·ª± ƒë·ªông cho c√°c v·∫•n ƒë·ªÅ ph·ª©c t·∫°p

### ROI: 300-500%

## K·∫øt Lu·∫≠n
Vi·ªác tri·ªÉn khai AI automation ƒë√∫ng c√°ch c√≥ th·ªÉ **transform** to√†n b·ªô business model c·ªßa b·∫°n.`,
        status: 'PUBLISHED',
        publishedAt: new Date('2024-01-12').toISOString()
      },
      {
        title: 'Security Best Practices Cho AI Agents',
        slug: 'ai-agents-security-best-practices',
        excerpt: 'H∆∞·ªõng d·∫´n chi ti·∫øt c√°ch b·∫£o m·∫≠t AI Agents c·ªßa b·∫°n: t·ª´ data encryption ƒë·∫øn access control v√† compliance frameworks.',
        content: `# Security Best Practices Cho AI Agents

B·∫£o m·∫≠t l√† y·∫øu t·ªë **quan tr·ªçng nh·∫•t** khi tri·ªÉn khai AI Agents trong doanh nghi·ªáp.

## 1. Data Protection
### Data Encryption
- Encryption at rest: AES-256
- Encryption in transit: TLS 1.3
- Key management: Hardware Security Modules (HSM)

## K·∫øt Lu·∫≠n
Security kh√¥ng ph·∫£i l√† **one-time setup** m√† l√† **ongoing process**.`,
        status: 'PUBLISHED',
        publishedAt: new Date('2024-01-10').toISOString()
      }
    ];

    for (const post of blogPosts) {
      try {
        const response = await fetch('http://localhost:3000/api/admin/blog', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify(post)
        });

        const result = await response.json();
        
        if (response.ok) {
          console.log(`‚úÖ T·∫°o th√†nh c√¥ng: ${post.title}`);
        } else {
          console.log(`‚ùå L·ªói t·∫°o blog: ${result.error || 'Unknown error'}`);
        }
      } catch (error) {
        console.log(`‚ùå Network error: ${error.message}`);
      }
    }

    console.log('üéâ Ho√†n th√†nh t·∫°o blog posts!');

  } catch (error) {
    console.error('‚ùå L·ªói:', error);
  }
}

createBlogPosts(); 